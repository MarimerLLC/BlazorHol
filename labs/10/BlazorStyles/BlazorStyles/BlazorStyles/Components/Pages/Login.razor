@page "/login"

@using BlazorStyles.Services
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies

@inject IHttpContextAccessor HttpContextAccessor
@inject NavigationManager NavigationManager
@inject ValidateUser ValidateUser

<h3>Login</h3>

<EditForm Model="@loginModel" OnSubmit="@LoginUser" FormName="loginform">
    <div class="form-group">
        <label for="email">Username</label>
        <InputText id="username" class="form-control" @bind-Value="@loginModel.Username" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" @bind-Value="@loginModel.Password" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>


@code {
    [SupplyParameterFromForm]
    public LoginModel loginModel { get; set; } = new();
    private string Message { get; set; } = string.Empty;

    private async Task LoginUser()
    {
        var userInfo = await ValidateUser.Validate(loginModel.Username, loginModel.Password);
        if (userInfo.IsAuthenticated)
        {
            var httpContext = HttpContextAccessor.HttpContext;
            if (httpContext != null)
            {
                var claims = new List<Claim>();
                foreach (var c in userInfo.Claims)
                {
                    claims.Add(new Claim(c.Type, c.Value));
                }
                var claimsIdentity = new ClaimsIdentity(claims, "ValidateUser");
                var claimsPrincipal = new ClaimsPrincipal(claimsIdentity);

                AuthenticationProperties authProperties = new AuthenticationProperties();
                await httpContext.SignInAsync(
                    CookieAuthenticationDefaults.AuthenticationScheme,
                    claimsPrincipal,
                    authProperties);
            }
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Message = "Invalid login attempt";
        }
    }

    public class LoginModel
    {
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
