@page "/editperson"
@page "/editperson/{id:int}"

@using BlazorHolData.Data

@inject NavigationManager NavigationManager

<h3>EditPerson</h3>

@if (Person == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@Person" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="FirstName">First Name</label>
            <InputText id="FirstName" class="form-control" @bind-Value="Person.FirstName" />
            <ValidationMessage For="@(() => Person.FirstName)" />
        </div>
        <div class="form-group">
            <label for="LastName">Last Name</label>
            <InputText id="LastName" class="form-control" @bind-Value="Person.LastName" />
            <ValidationMessage For="@(() => Person.LastName)" />
        </div>
        <div class="form-group">
            <label for="Age">Age</label>
            <InputNumber id="Age" class="form-control" @bind-Value="Person.Age" />
            <ValidationMessage For="@(() => Person.Age)" />
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Person? Person { get; set; }

    protected override void OnParametersSet()
    {
        if (Id > 0)
        {
            Person = Data.Database.People.Where(p => p.Id == Id).Select(_ => new Person
                { Id = _.Id, FirstName = _.FirstName, LastName = _.LastName, Age = _.Age }).First();
        }
        else
        {
            Person = new Person { Id = -1,  FirstName = string.Empty, LastName = string.Empty };
        }
    }

    private void HandleValidSubmit()
    {
        if (Person == null) return;
        if (Person.Id > 0)
        {
            var person = Data.Database.People.Where(p => p.Id == Id).FirstOrDefault();
            if (person != null)
            {
                person.FirstName = Person.FirstName;
                person.LastName = Person.LastName;
                person.Age = Person.Age;
            }
        }
        else
        {
            var newId = Data.Database.People.Max(p => p.Id) + 1;
            Person.Id = newId;
            Data.Database.People.Add(Person);
        }
        NavigationManager.NavigateTo("/");
    }
}
